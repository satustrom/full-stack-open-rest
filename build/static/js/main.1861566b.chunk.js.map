{"version":3,"sources":["services/persons.js","common/Button.js","common/Input.js","components/People.js","components/Notification.js","containers/PhoneNumbers.js","services/countries.js","containers/Countries.js","App.js","registerServiceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Button","styled","button","props","small","css","important","Input","input","Table","table","TableHeader","th","TableData","td","options","TableRow","tr","People","personsList","toggleDelete","filterWith","filter","person","name","startsWith","map","key","number","onClick","Info","div","Notification","text","PhoneNumbers","useState","activeNotification","setActiveNotification","peopleList","setPeopleList","newPerson","setNewPerson","showAll","setShowAll","filteredName","setFilteredName","useEffect","personService","length","setTimeout","peopleToShow","label","onSubmit","e","preventDefault","exists","find","window","confirm","newPeopleList","catch","error","concat","handleAdd","value","onChange","target","placeholder","type","style","display","marginRight","p","search","Countries","countries","setCountries","selectedInfo","setSelectInfo","findCountry","countryService","hasSeveralCountries","paddingBottom","country","i","population","alt","src","flag","width","App","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+SACMA,EAAU,eAuBD,EArBA,WAGb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAAAG,GAEb,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,4iBCnB3C,IAuBeM,EAvBAC,IAAOC,OAAV,KAWR,SAAAC,GAAK,OAAIA,EAAMC,OAASC,YAAf,QAOT,SAAAF,GAAK,OAAIA,EAAMG,WAAaD,YAAnB,Q,0PClBb,IAWeE,EAXDN,IAAOO,MAAV,K,qnBC+BX,IAAMC,EAAQR,IAAOS,MAAV,KAKLC,EAAcV,IAAOW,GAAV,KAOXC,EAAYZ,IAAOa,GAAV,KAKX,SAAAX,GAAK,OACLA,EAAMY,SACNV,YADA,QAMEW,EAAWf,IAAOgB,GAAV,KAKCC,EAzDf,YAA4D,IAA1CC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAC3C,OACE,kBAACZ,EAAD,KACE,+BACE,kBAACO,EAAD,KACE,kBAACL,EAAD,aACA,kBAACA,EAAD,eACA,kBAACA,EAAD,OAGDQ,EACEG,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,WAAWJ,MACxCK,KAAI,SAAAH,GAAM,OACT,kBAACP,EAAD,CAAUW,IAAKJ,EAAO1B,IACpB,kBAACgB,EAAD,KAAYU,EAAOC,MACnB,kBAACX,EAAD,KAAYU,EAAOK,QACnB,kBAACf,EAAD,CAAWE,SAAO,GAChB,kBAAC,EAAD,CAAQX,OAAK,EAACyB,QAAST,EAAaG,EAAO1B,GAAI0B,EAAOC,OAAtD,kB,kLCdhB,IAAMM,EAAO7B,IAAO8B,IAAV,KAQKC,EAZf,YAAiC,IAATC,EAAQ,EAARA,KACtB,OAAO,kBAACH,EAAD,KAAOG,ICID,SAASC,IAAgB,IAAD,EACeC,mBAAS,IADxB,mBAC9BC,EAD8B,KACVC,EADU,OAEDF,mBAAS,IAFR,mBAE9BG,EAF8B,KAElBC,EAFkB,OAGHJ,mBAAS,CAAEX,KAAM,GAAII,OAAQ,KAH1B,mBAG9BY,EAH8B,KAGnBC,EAHmB,OAIPN,oBAAS,GAJF,mBAI9BO,EAJ8B,KAIrBC,EAJqB,OAKGR,mBAAS,IALZ,mBAK9BS,EAL8B,KAKhBC,EALgB,KAOrCC,qBAAU,WACRC,IAAuBvD,MAAK,SAAAC,GAAQ,OAAI8C,EAAc9C,QACrD,IAEHqD,qBAAU,WACJV,EAAmBY,OAAS,GAC9BC,YAAW,WACTZ,EAAsB,MACrB,OAEJ,CAACD,IAEJ,IAiDMc,EAAeR,EACjBJ,EACAA,EAAWhB,QAAO,SAAAC,GAAM,MAAsB,KAAlBA,EAAOK,UAEjCuB,EAAQT,EAAU,cAAgB,uBACxC,OACE,oCACGN,EAAmBY,OAAS,GAC3B,kBAAC,EAAD,CAAcf,KAAMG,IAGtB,8CACA,0BAAMgB,SAAU,SAAAC,GAAC,OA7DH,SAAAA,GAChBA,EAAEC,iBAEF,IAAMC,EAASjB,EAAWkB,MAAK,SAAAjC,GAAM,OAAIA,EAAOC,OAASgB,EAAUhB,QAG/D+B,GACFE,OAAOC,QAAP,uBACkBlB,EAAUhB,KAD5B,0CACkE+B,EAAO3B,OADzE,eACsFY,EAAUZ,OADhG,MAIAmB,EACUQ,EAAO1D,GAAI2C,GAClBhD,MAAK,SAAAC,GACJ,IAAMkE,EAAgBrB,EAAWZ,KAAI,SAAAH,GAAM,OACzCA,EAAO1B,KAAOJ,EAASI,GAAK0B,EAAS9B,KAGvC8C,EAAcoB,GACdtB,EAAsB,sBAAD,OACG5C,EAAS+B,KADZ,oBAItBoC,OAAM,SAAAC,GAAK,OACVxB,EAAsB,uCAAD,OACoBwB,EAAMrC,UAInDuB,EAAqBP,GAAWhD,MAAK,SAAAC,GACnC8C,EAAcD,EAAWwB,OAAOrE,IAChC4C,EAAsB,0BAAD,OACO5C,EAAS+B,KADhB,iBAMzBiB,EAAa,CAAEjB,KAAM,GAAII,OAAQ,KAwBVmC,CAAUV,KAC7B,kBAAC,EAAD,CACEW,MAAOxB,EAAUhB,KACjByC,SAAU,SAAAZ,GAAC,OAAIZ,EAAa,eAAKD,EAAN,CAAiBhB,KAAM6B,EAAEa,OAAOF,UAC3DG,YAAY,SAEd,kBAAC,EAAD,CACEH,MAAOxB,EAAUZ,OACjBqC,SAAU,SAAAZ,GAAC,OAAIZ,EAAa,eAAKD,EAAN,CAAiBZ,OAAQyB,EAAEa,OAAOF,UAC7DG,YAAY,WAEd,kBAAC,EAAD,CAAQC,KAAK,UAAb,eAEF,8CACA,kBAAC,EAAD,CACEJ,MAAOpB,EACPqB,SAAU,SAAAZ,GAAC,OAAIR,EAAgBQ,EAAEa,OAAOF,QACxCG,YAAY,SAGd,uBAAGE,MAAO,CAAEC,QAAS,eAAgBC,YAAa,QAAlD,2BAGA,kBAAC,EAAD,CAAQ1C,QAAS,kBAAMc,GAAYD,KAAWS,GAE9C,kBAAC,EAAD,CACE9B,WAAYuB,EACZzB,YAAa+B,EACb9B,aAjDe,SAACvB,EAAI2B,GACxB,OAAO,WACLuB,EAAqBlD,GAAIL,MAAK,WAC5B+C,EAAcD,EAAWhB,QAAO,SAAAkD,GAAC,OAAIA,EAAE3E,KAAOA,MAC9CwC,EAAsB,YAAD,OAAab,EAAb,6BCtE7B,IAOe,EALO,SAAAiD,GAEpB,OADgBnF,IAAMC,IAAN,UAHS,mCAGT,iBAAwCkF,IACzCjF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCE5B,SAASgF,IAAa,IAAD,EACAvC,mBAAS,IADT,mBAC3BwC,EAD2B,KAChBC,EADgB,OAEIzC,mBAAS,IAFb,mBAE3B0C,EAF2B,KAEbC,EAFa,KAI5BC,EAAc,SAAAf,GAClBc,EAAcd,GAEdgB,EACiBhB,GACdxE,MAAK,SAAAC,GAAQ,OAAImF,EAAanF,OAG7BwF,EAAsBN,EAAU3B,QAAU,IAAM2B,EAAU3B,OAAS,EAEzE,OACE,yBAAKqB,MAAO,CAAEa,cAAe,UAC3B,kBAAC,EAAD,CACEjB,SAAU,SAAAZ,GAAC,OAAI0B,EAAY1B,EAAEa,OAAOF,QACpCG,YAAY,UACZH,MAAOa,IAGRF,EAAU3B,OAAS,IAClB,kBAAC,EAAD,CAAcf,KAAK,+BAGpBgD,GACCN,EAAUjD,KAAI,SAACyD,EAASC,GAAV,OACZ,kBAAC,EAAD,CAAQvD,QAAS,kBAAMkD,EAAYI,EAAQ3D,OAAOG,IAAKyD,GACpDD,EAAQ3D,SAIO,IAArBmD,EAAU3B,QACT2B,EAAUjD,KAAI,SAACyD,EAASC,GAAV,OACZ,yBAAKzD,IAAKyD,GACR,4CAAkBD,EAAQ3D,MAC1B,0CAAgB2D,EAAQE,YACxB,yBACEC,IAAI,eACJC,IAAKJ,EAAQK,KACbnB,MAAO,CAAEoB,MAAO,WAGlB,2C,IC9BGC,E,uKAdX,OACE,oCACE,2DAEA,8CACA,kBAACxD,EAAD,MAEA,yCACA,kBAACwC,EAAD,W,GAVUiB,aCIZC,EAAcC,QACW,cAA7BpC,OAAOqC,SAASC,UAEe,UAA7BtC,OAAOqC,SAASC,UAEhBtC,OAAOqC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT1G,MAAK,SAAA8G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBlD,OAAM,SAAAC,GACLgD,QAAQhD,MAAM,4CAA6CA,MCvEjEkD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDYlC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIgB,IAAIC,GAAwB3D,OAAOqC,UAC3CuB,SAAW5D,OAAOqC,SAASuB,OAIvC,OAGF5D,OAAO6D,iBAAiB,QAAQ,WAC9B,IAAMpB,EAAK,UAAMkB,GAAN,sBAEPxB,IAiDV,SAAiCM,GAE/BqB,MAAMrB,GACH1G,MAAK,SAAAC,GAGkB,MAApBA,EAAS+H,SACuD,IAAhE/H,EAASgI,QAAQlI,IAAI,gBAAgBmI,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAMnI,MAAK,SAAA8G,GACjCA,EAAasB,aAAapI,MAAK,WAC7BiE,OAAOqC,SAAS+B,eAKpB5B,EAAgBC,MAGnBtC,OAAM,WACLiD,QAAQC,IACN,oEArEAgB,CAAwB5B,GAIxBC,UAAUC,cAAcuB,MAAMnI,MAAK,WACjCqH,QAAQC,IACN,gHAMJb,EAAgBC,OCvCxB6B,K","file":"static/js/main.1861566b.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  // promise on sama kuin seuraava request\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, remove };\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  min-width: 70px;\n  min-height: 25px;\n  border-radius: 20px;\n  color: white;\n  background-color: black;\n  font-size: 16px;\n  padding: 8px 15px;\n  margin: 2px;\n  outline-color: #C8C8C8;\n\n  ${props => props.small && css`\n    width: 70px;\n    height: 25px;\n    padding: 2px 5px;\n    font-size: 12px;\n  `}\n\n  ${props => props.important && css`\n    background-color: green;\n  `}\n`;\n\nexport default Button;\n\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  height: 25px;\n  width: 130px;\n  margin: 6px 0;\n  border: 1px\tsolid white;\n  background-color: #E8E8E8;\n  outline-color: #C8C8C8;\n  display: block;\n  padding: 5px 10px;\n`;\n\nexport default Input;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Button from '../common/Button';\n\nfunction People({ personsList, toggleDelete, filterWith }) {\n  return (\n    <Table>\n      <tbody>\n        <TableRow>\n          <TableHeader>Name</TableHeader>\n          <TableHeader>Number</TableHeader>\n          <TableHeader></TableHeader>\n        </TableRow>\n\n        {personsList\n          .filter(person => person.name.startsWith(filterWith))\n          .map(person => (\n            <TableRow key={person.id}>\n              <TableData>{person.name}</TableData>\n              <TableData>{person.number}</TableData>\n              <TableData options>\n                <Button small onClick={toggleDelete(person.id, person.name)}>\n                  Remove\n                </Button>\n              </TableData>\n            </TableRow>\n          ))}\n      </tbody>\n    </Table>\n  );\n}\n\nconst Table = styled.table`\n  border: 1px solid white;\n  width: 80%;\n`;\n\nconst TableHeader = styled.th`\n  color: #303030;\n  font-size: 18px;\n  padding: 12px;\n  text-align: left;\n`;\n\nconst TableData = styled.td`\n  padding: 8px 12px;\n  font-size: 16px;\n  text-transform: capitalize;\n\n  ${props =>\n    props.options &&\n    css`\n      width: 80px;\n    `}\n`;\n\nconst TableRow = styled.tr`\n  background-color: #e8e8e8;\n  height: 30px;\n`;\n\nexport default People;\n","import React from 'react';\nimport styled from 'styled-components';\n\n// TODO: Add severity\nfunction Notification({ text }) {\n  return <Info>{text}</Info>;\n}\n\nconst Info = styled.div`\n  width: 80%;\n  height: 35px;\n  background-color: #e8e8e8;\n  color: #808080;\n  padding: 10px 0 0 5px;\n`;\n\nexport default Notification;\n","import React, { useEffect, useState } from 'react';\n\nimport personService from '../services/persons';\n\nimport Button from '../common/Button';\nimport Input from '../common/Input';\nimport People from '../components/People';\nimport Notification from '../components/Notification';\n\nexport default function PhoneNumbers() {\n  const [activeNotification, setActiveNotification] = useState('');\n  const [peopleList, setPeopleList] = useState([]);\n  const [newPerson, setNewPerson] = useState({ name: '', number: '' });\n  const [showAll, setShowAll] = useState(true);\n  const [filteredName, setFilteredName] = useState('');\n\n  useEffect(() => {\n    personService.getAll().then(response => setPeopleList(response));\n  }, []);\n\n  useEffect(() => {\n    if (activeNotification.length > 0) {\n      setTimeout(() => {\n        setActiveNotification('');\n      }, 5000);\n    }\n  }, [activeNotification]);\n\n  const handleAdd = e => {\n    e.preventDefault();\n\n    const exists = peopleList.find(person => person.name === newPerson.name);\n\n    if (\n      !!exists &&\n      window.confirm(\n        `Confirm that ${newPerson.name} will update phone number from ${exists.number} to ${newPerson.number}?`\n      )\n    ) {\n      personService\n        .update(exists.id, newPerson)\n        .then(response => {\n          const newPeopleList = peopleList.map(person =>\n            person.id !== response.id ? person : response\n          );\n\n          setPeopleList(newPeopleList);\n          setActiveNotification(\n            `Nice! Person named ${response.name} is updated!`\n          );\n        })\n        .catch(error =>\n          setActiveNotification(\n            `So sorry, we faced problems! Error: ${error.name}`\n          )\n        );\n    } else {\n      personService.create(newPerson).then(response => {\n        setPeopleList(peopleList.concat(response));\n        setActiveNotification(\n          `Great! New peson named ${response.name} created!`\n        );\n      });\n    }\n\n    setNewPerson({ name: '', number: '' });\n  };\n\n  const toggleDelete = (id, name) => {\n    return () => {\n      personService.remove(id).then(() => {\n        setPeopleList(peopleList.filter(p => p.id !== id));\n        setActiveNotification(`Alright, ${name} is now remoded!`);\n      });\n    };\n  };\n\n  const peopleToShow = showAll\n    ? peopleList\n    : peopleList.filter(person => person.number !== '');\n\n  const label = showAll ? 'Showing All' : 'Hiding empty numbers';\n  return (\n    <>\n      {activeNotification.length > 0 && (\n        <Notification text={activeNotification} />\n      )}\n\n      <h3>Create or edit</h3>\n      <form onSubmit={e => handleAdd(e)}>\n        <Input\n          value={newPerson.name}\n          onChange={e => setNewPerson({ ...newPerson, name: e.target.value })}\n          placeholder=\"Name\"\n        />\n        <Input\n          value={newPerson.number}\n          onChange={e => setNewPerson({ ...newPerson, number: e.target.value })}\n          placeholder=\"Number\"\n        />\n        <Button type=\"submit\">Add/Update</Button>\n      </form>\n      <h3>Find with name</h3>\n      <Input\n        value={filteredName}\n        onChange={e => setFilteredName(e.target.value)}\n        placeholder=\"Name\"\n      />\n\n      <p style={{ display: 'inline-block', marginRight: '8px' }}>\n        Restrict phone numbers:\n      </p>\n      <Button onClick={() => setShowAll(!showAll)}>{label}</Button>\n\n      <People\n        filterWith={filteredName}\n        personsList={peopleToShow}\n        toggleDelete={toggleDelete}\n      />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst COUNTRY_SEARCH_URL = 'https://restcountries.eu/rest/v2';\n\nconst findCountries = search => {\n  const request = axios.get(`${COUNTRY_SEARCH_URL}/name/${search}`);\n  return request.then(response => response.data);\n};\n\nexport default { findCountries };\n","import React, { useState } from 'react';\n\nimport countryService from '../services/countries';\n\nimport Button from '../common/Button';\nimport Input from '../common/Input';\nimport Notification from '../components/Notification';\n\nexport default function Countries() {\n  const [countries, setCountries] = useState('');\n  const [selectedInfo, setSelectInfo] = useState('');\n\n  const findCountry = value => {\n    setSelectInfo(value);\n\n    countryService\n      .findCountries(value)\n      .then(response => setCountries(response));\n  };\n\n  const hasSeveralCountries = countries.length <= 10 && countries.length > 1;\n\n  return (\n    <div style={{ paddingBottom: '100px' }}>\n      <Input\n        onChange={e => findCountry(e.target.value)}\n        placeholder=\"Country\"\n        value={selectedInfo}\n      />\n\n      {countries.length > 10 && (\n        <Notification text=\"Could you specify a bit :)\" />\n      )}\n\n      {hasSeveralCountries &&\n        countries.map((country, i) => (\n          <Button onClick={() => findCountry(country.name)} key={i}>\n            {country.name}\n          </Button>\n        ))}\n\n      {countries.length === 1 &&\n        countries.map((country, i) => (\n          <div key={i}>\n            <p>Country name: {country.name}</p>\n            <p>Population: {country.population}</p>\n            <img\n              alt=\"country-flag\"\n              src={country.flag}\n              style={{ width: '100px' }}\n            />\n\n            <p>Weather</p>\n          </div>\n        ))}\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport PhoneNumbers from './containers/PhoneNumbers';\nimport Countries from './containers/Countries';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <h1>Full Stack Open 2020 course</h1>\n\n        <h2>Phone numbers </h2>\n        <PhoneNumbers />\n\n        <h2>Countries</h2>\n        <Countries />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}